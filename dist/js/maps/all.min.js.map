{"version":3,"sources":["three.js","barba.js","jquery.js","script.js","tanka.js","xxxjquery.js"],"names":["init","renderer","THREE","WebGLRenderer","canvas","document","querySelector","antialias","devicePixelRatio","window","setSize","innerWidth","innerHeight","setClearColor","scene","Scene","fog","Fog","camera","PerspectiveCamera","position","set","rot","mouseX","addEventListener","event","pageX","geometry1","BoxGeometry","material1","MeshBasicMaterial","color","center_box","Mesh","add","geometry","Geometry","i","meshTemp","x","Math","random","y","z","rotation","PI","mergeMesh","material","MeshStandardMaterial","mesh","DirectionalLight","AmbientLight","down","onResize","setPixelRatio","aspect","updateProjectionMatrix","tick","rotateY","targetRot","radian","sin","cos","lookAt","Vector3","render","requestAnimationFrame","barba","use","barbaCss","$","Pace","on","fadeIn","t","speed","click","fadeOut","setTimeout","location","href","getElementById","style","opacity","this","attr","pos","offset","top","animate","scrollTop","toggleClass","jQuery","scroll","each","isPos","height","addClass","removeClass"],"mappings":"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","file":"all.min.js","sourcesContent":["window.addEventListener('load', init);\r\n\r\n  function init() {\r\n\r\n    // レンダラーを作成\r\n    const renderer = new THREE.WebGLRenderer({\r\n      canvas: document.querySelector('#canvas'),\r\n      antialias: true,\r\n      devicePixelRatio: window.devicePixelRatio\r\n    });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0xffffff, 1.0);\r\n\r\n    // シーンを作成\r\n    const scene = new THREE.Scene();\r\n\r\n    // フォグを設定\r\n    scene.fog = new THREE.Fog(0xffffff, 50, 2000);\r\n\r\n    // カメラを作成\r\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight);\r\n    camera.position.set(0, 0, 1000);\r\n\r\n    let rot = 0; // 角度\r\n    let mouseX = 0; // マウス座標\r\n\r\n    // マウス座標はマウスが動いた時のみ取得できる\r\n    document.addEventListener(\"mousemove\", (event) => {\r\n      mouseX = event.pageX;\r\n    });\r\n    \r\n    // 真ん中の箱\r\n    const geometry1 = new THREE.BoxGeometry(200, 200, 200);\r\n    const material1 = new THREE.MeshBasicMaterial({color: 0x000000, fog: false});\r\n    const center_box = new THREE.Mesh(geometry1, material1);\r\n    scene.add(center_box);\r\n    \r\n    // 空のジオメトリーを作成\r\n    const geometry = new THREE.Geometry();\r\n    \r\n    for (let i = 0; i < 800; i++) {\r\n      const meshTemp = new THREE.Mesh(new THREE.BoxGeometry(50, 50, 50));\r\n      meshTemp.position.x = (Math.random() - 0.5) * 2000;\r\n      meshTemp.position.y = (Math.random() - 0.5) * 2000;\r\n      meshTemp.position.z = (Math.random() - 0.5) * 2000;\r\n      meshTemp.rotation.x = Math.random() * 2 * Math.PI;\r\n      meshTemp.rotation.y = Math.random() * 2 * Math.PI;\r\n      meshTemp.rotation.z = Math.random() * 2 * Math.PI;\r\n      \r\n      // メッシュの結合\r\n      geometry.mergeMesh(meshTemp);\r\n    }\r\n    \r\n    const material = new THREE.MeshStandardMaterial({color: 0x000000});\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    scene.add(mesh);\r\n\r\n    // 光源\r\n    scene.add(new THREE.DirectionalLight(0xffffff, 2)); // 平行光源\r\n    scene.add(new THREE.AmbientLight(0xffffff)); // 環境光源\r\n\r\n    // クリックしたら周りの黒箱を降下\r\n    let down = false;\r\n    const button = document.querySelector('.button');\r\n\r\n    button.addEventListener('click', function(){\r\n      down = true;\r\n    });\r\n\r\n    // 毎フレーム時に実行されるループイベント\r\n    tick();\r\n    function tick() {\r\n      // 回す\r\n      mesh.rotateY(0.002);\r\n      center_box.rotation.y += 0.01;\r\n      center_box.rotation.x += 0.01;\r\n\r\n      const targetRot = (mouseX / window.innerWidth) * 360;\r\n      // イージングの公式を用いて滑らかにする\r\n      // 値 += (目標値 - 現在の値) * 減速値\r\n      rot += (targetRot - rot) * 0.005;\r\n\r\n      // ラジアンに変換する\r\n      const radian = rot * Math.PI / 180;\r\n      // 角度に応じてカメラの位置を設定\r\n      camera.position.x = 1000 * Math.sin(radian);\r\n      // camera.position.y = 500 * Math.sin(radian);\r\n      camera.position.z = 1000 * Math.cos(radian);\r\n      // 原点方向を見つめる\r\n      camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n        if(down){\r\n          mesh.position.y -= 15;\r\n        }\r\n\r\n      renderer.render(scene, camera); // レンダリング\r\n\r\n      requestAnimationFrame(tick);\r\n    }\r\n\r\n    // リサイズ用\r\n    onResize();\r\n    // リサイズイベント発生時に実行\r\n    window.addEventListener('resize', onResize);\r\n  \r\n    function onResize() {\r\n  \r\n      // レンダラーのサイズを調整する\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n  \r\n      // カメラのアスペクト比を正す\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n  }","barba.use(barbaCss);\r\n\r\n// function replaceHeadMeta(target) {\r\n    // const $newPageMeta = $('<head />').html(\r\n    //   $.parseHTML(\r\n    //     target.html.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0],\r\n    //     document,\r\n    //     true\r\n    //     )\r\n    // );\r\n    // const $newPageMeta = target.html.find(\"meta\");\r\n    // const headTags = \"meta[name='description']\";\r\n\r\n    // タグを削除\r\n    // $('head').find(\"meta\").remove();\r\n    // タグを追加\r\n    // $('head').appendTo($newPageMeta);\r\n// }\r\n\r\nbarba.init();","$(function () {\r\n\r\n\t// ローディングバー\r\n\tPace.on('done', function () {\r\n\t\t$('.wrap').fadeIn();\r\n\t});\r\n\r\n\t// t.jsの速度調整\r\n\t$('#target').t({\r\n\t\tspeed: 50,\r\n\t\t// speed_vary:true,\r\n\t});\r\n\r\n\t// ボタンがクリックされてから少しおいてフェードアウト\r\n\t$('#button').click(function () {\r\n\r\n\t\t$('#button').fadeOut();\r\n\r\n\t\tsetTimeout(function () {\r\n\t\t\t$('#canvas, #target').fadeOut(function () {\r\n\t\t\t\twindow.location.href = 'profile.html';\r\n\t\t\t});\r\n\t\t}, 2000);\r\n\t});\r\n});","window.addEventListener('DOMContentLoaded', function(){\r\n  // opacityでフェードイン\r\n  document.getElementById('portfolio').style.opacity = '1';\r\n\r\n  // スムーズスクロール\r\n  $('a[href^=\"#\"]').click(function(){\r\n    var speed = 400;\r\n    var href = $(this).attr(\"href\");\r\n    var tar = $(href == \"#\" || href == \"\" ? 'html' : href);\r\n    var pos = tar.offset().top;\r\n\r\n    $('html, body').animate({scrollTop: pos}, speed, 'swing');\r\n    return false;\r\n  });\r\n});\r\n","(function ($) {\r\n\t$(function () {\r\n\t\t$('#nav-toggle').on('click', function () {\r\n\t\t\t$('body').toggleClass('open');\r\n\t\t});\r\n\t});\r\n})(jQuery);","$(function(){\r\n\r\n    $(window).scroll(function (){\r\n        $('.information').each(function(){\r\n            var isPos = $(this).offset().top,\r\n                scroll = $(window).scrollTop(),\r\n                windowHeight = $(window).height();\r\n                \r\n            if (scroll > isPos - windowHeight +150){\r\n                $(this).addClass('is');\r\n                }else {\r\n                    $(this).removeClass('is');\r\n            }\r\n        });\r\n    });\r\n\r\n    $('#sp-gnav').click(function(){\r\n        $('.header-inner').toggleClass('open');\r\n    });\r\n});"]}