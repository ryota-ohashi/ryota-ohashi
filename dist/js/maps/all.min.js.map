{"version":3,"sources":["three.js","jquery.js","script.js","tanka.js","xxxjquery.js"],"names":["init","renderer","THREE","WebGLRenderer","canvas","document","querySelector","antialias","devicePixelRatio","window","setSize","innerWidth","innerHeight","setClearColor","scene","Scene","fog","Fog","camera","PerspectiveCamera","position","set","geometry1","BoxGeometry","material1","MeshBasicMaterial","color","box1","Mesh","add","group","Group","geometry","BoxBufferGeometry","material","MeshStandardMaterial","i","mesh","x","Math","random","y","z","rotation","PI","DirectionalLight","AmbientLight","down","onResize","setPixelRatio","aspect","updateProjectionMatrix","addEventListener","tick","rotateY","render","requestAnimationFrame","$","Pace","on","fadeIn","t","speed","click","fadeOut","setTimeout","location","href","getElementById","style","opacity","this","attr","pos","offset","top","animate","scrollTop","toggleClass","jQuery","scroll","each","isPos","height","addClass","removeClass"],"mappings":"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","file":"all.min.js","sourcesContent":["window.addEventListener('load', init);\r\n\r\n  function init() {\r\n\r\n    // レンダラーを作成\r\n    const renderer = new THREE.WebGLRenderer({\r\n      canvas: document.querySelector('#canvas'),\r\n      antialias: true,\r\n      devicePixelRatio: window.devicePixelRatio\r\n    });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0xffffff, 1.0);\r\n    // シーンを作成\r\n    const scene = new THREE.Scene();\r\n    // フォグを設定\r\n    scene.fog = new THREE.Fog(0xffffff, 50, 2000);\r\n    // カメラを作成\r\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight);\r\n    camera.position.set(0, 0, 1000);\r\n    // メインの箱\r\n    const geometry1 = new THREE.BoxGeometry(200, 200, 200);\r\n    const material1 = new THREE.MeshBasicMaterial({color: 0x000000, fog: false});\r\n    const box1 = new THREE.Mesh(geometry1, material1);\r\n    scene.add(box1);\r\n    // グループを作成\r\n    const group = new THREE.Group();\r\n    scene.add(group);\r\n    const geometry = new THREE.BoxBufferGeometry(50, 50, 50);\r\n    const material = new THREE.MeshStandardMaterial({color: 0x000000});\r\n\r\n    for (let i = 0; i < 800; i++) {\r\n      const mesh = new THREE.Mesh(geometry, material);\r\n      mesh.position.x = (Math.random() - 0.5) * 2000;\r\n      mesh.position.y = (Math.random() - 0.5) * 2000;\r\n      mesh.position.z = (Math.random() - 0.5) * 2000;\r\n      mesh.rotation.x = Math.random() * 2 * Math.PI;\r\n      mesh.rotation.y = Math.random() * 2 * Math.PI;\r\n      mesh.rotation.z = Math.random() * 2 * Math.PI;\r\n\r\n      // THREE.GeometryUtils.merge(geometry, mesh);\r\n      // グループに格納する\r\n      group.add(mesh);\r\n    }\r\n    // 軸表示用\r\n    // axisHelper = new THREE.AxisHelper(1000);\r\n    // scene.add(axisHelper);\r\n    // 光源\r\n    scene.add(new THREE.DirectionalLight(0xffffff, 2)); // 平行光源\r\n    scene.add(new THREE.AmbientLight(0xffffff)); // 環境光源\r\n\r\n    // クリックしたら周りの黒箱を降下\r\n    let down = false;\r\n    const button = document.querySelector('.button');\r\n\r\n    button.addEventListener('click', function(){\r\n      down = true;\r\n    });\r\n\r\n    // 毎フレーム時に実行されるループイベントです\r\n    tick();\r\n    function tick() {\r\n      // グループを回す\r\n      group.rotateY(0.002);\r\n      box1.rotation.y += 0.01;\r\n      box1.rotation.x += 0.01;\r\n\r\n        if(down){\r\n          group.position.y -= 15;\r\n        }\r\n\r\n      renderer.render(scene, camera); // レンダリング\r\n      // renderer.render(scene1, camera);\r\n      requestAnimationFrame(tick);\r\n    }\r\n\r\n    // リサイズ用\r\n    onResize();\r\n    // リサイズイベント発生時に実行\r\n    window.addEventListener('resize', onResize);\r\n  \r\n    function onResize() {\r\n  \r\n      // レンダラーのサイズを調整する\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n  \r\n      // カメラのアスペクト比を正す\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n  }","$(function () {\r\n\r\n\t// ローディングバー\r\n\tPace.on('done', function () {\r\n\t\t$('.wrap').fadeIn();\r\n\t});\r\n\r\n\t// t.jsの速度調整\r\n\t$('#target').t({\r\n\t\tspeed: 50,\r\n\t\t// speed_vary:true,\r\n\t});\r\n\r\n\t// ボタンがクリックされてから少しおいてフェードアウト\r\n\t$('#button').click(function () {\r\n\r\n\t\t$('#button').fadeOut();\r\n\r\n\t\tsetTimeout(function () {\r\n\t\t\t$('#canvas, #target').fadeOut(function () {\r\n\t\t\t\twindow.location.href = 'inside.html';\r\n\t\t\t});\r\n\t\t}, 2000);\r\n\t});\r\n});","window.addEventListener('DOMContentLoaded', function(){\r\n  // opacityでフェードイン\r\n  document.getElementById('portfolio-section').style.opacity = '1';\r\n\r\n  // スムーズズクロール\r\n  $('a[href^=\"#\"]').click(function(){\r\n    var speed = 400;\r\n    var href = $(this).attr(\"href\");\r\n    var tar = $(href == \"#\" || href == \"\" ? 'html' : href);\r\n    var pos = tar.offset().top;\r\n\r\n    $('html, body').animate({scrollTop: pos}, speed, 'swing');\r\n    return false;\r\n  });\r\n});\r\n","(function ($) {\r\n\t$(function () {\r\n\t\t$('#nav-toggle').on('click', function () {\r\n\t\t\t$('body').toggleClass('open');\r\n\t\t});\r\n\t});\r\n})(jQuery);","$(function(){\r\n\r\n    $(window).scroll(function (){\r\n        $('.information').each(function(){\r\n            var isPos = $(this).offset().top,\r\n                scroll = $(window).scrollTop(),\r\n                windowHeight = $(window).height();\r\n            if (scroll > isPos - windowHeight +150){\r\n                $(this).addClass('is');\r\n                }else {\r\n                    $(this).removeClass('is');\r\n            }\r\n        });\r\n    });\r\n\r\n    $('#sp-gnav').click(function(){\r\n        $('.header-inner').toggleClass('open');\r\n    });\r\n\r\n});"]}